~~ Python
| def pedir_num():
|     num_texto = input('Escribí un número: ')
|     num = int(num_texto)
|     print(num, 'al cuadrado es', num * num)
| 
| from dis import dis
| dis(pedir_num)
~~ Run: `python <archivo>`
~~ Output:

  2           0 LOAD_GLOBAL              0 (input)
              2 LOAD_CONST               1 ('Escribí un número: ')
              4 CALL_FUNCTION            1
              6 STORE_FAST               0 (num_texto)

  3           8 LOAD_GLOBAL              1 (int)
             10 LOAD_FAST                0 (num_texto)
             12 CALL_FUNCTION            1
             14 STORE_FAST               1 (num)

  4          16 LOAD_GLOBAL              2 (print)
             18 LOAD_FAST                1 (num)
             20 LOAD_CONST               2 ('al cuadrado es')
             22 LOAD_FAST                1 (num)
             24 LOAD_FAST                1 (num)
             26 BINARY_MULTIPLY
             28 CALL_FUNCTION            3
             30 POP_TOP
             32 LOAD_CONST               0 (None)
             34 RETURN_VALUE

~~ Javascript (V8)
| function pedir_num() {
|     let num_texto = input('Escribí un número: ')
|     let num = parseInt(num_texto)
|     console.log(num, 'al cuadrado es', num * num)
| }
~~ Run: `nodejs --print-bytecode --print-bytecode-filter=pedir_num <archivo>`
~~ Output:

[generated bytecode for function: pedir_num]
Parameter count 1
Frame size 56
   18 E> 0x26801c4b0232 @    0 : a0                StackCheck 
   43 S> 0x26801c4b0233 @    1 : 13 00 00          LdaGlobal [0], [0]
         0x26801c4b0236 @    4 : 26 f9             Star r2
         0x26801c4b0238 @    6 : 12 01             LdaConstant [1]
         0x26801c4b023a @    8 : 26 f8             Star r3
   43 E> 0x26801c4b023c @   10 : 5b f9 f8 02       CallUndefinedReceiver1 r2, r3, [2]
         0x26801c4b0240 @   14 : 26 fb             Star r0
   86 S> 0x26801c4b0242 @   16 : 13 02 04          LdaGlobal [2], [4]
         0x26801c4b0245 @   19 : 26 f9             Star r2
   86 E> 0x26801c4b0247 @   21 : 5b f9 fb 06       CallUndefinedReceiver1 r2, r0, [6]
         0x26801c4b024b @   25 : 26 fa             Star r1
  110 S> 0x26801c4b024d @   27 : 13 03 08          LdaGlobal [3], [8]
         0x26801c4b0250 @   30 : 26 f8             Star r3
  118 E> 0x26801c4b0252 @   32 : 28 f8 04 0a       LdaNamedProperty r3, [4], [10]
         0x26801c4b0256 @   36 : 26 f9             Star r2
         0x26801c4b0258 @   38 : 12 05             LdaConstant [5]
         0x26801c4b025a @   40 : 26 f6             Star r5
         0x26801c4b025c @   42 : 25 fa             Ldar r1
  149 E> 0x26801c4b025e @   44 : 34 fa 0c          Mul r1, [12]
         0x26801c4b0261 @   47 : 26 f5             Star r6
         0x26801c4b0263 @   49 : 27 fa f7          Mov r1, r4
  118 E> 0x26801c4b0266 @   52 : 55 f9 f8 04 0d    CallProperty r2, r3-r6, [13]
         0x26801c4b026b @   57 : 0d                LdaUndefined 
  156 S> 0x26801c4b026c @   58 : a4                Return

~~ Lua
| function pedir_num()
|     print('Escribí un número: ')
|     num_texto = io.read()
|     num = tonumber(num_texto)
|     print(num, 'al cuadrado es', num * num)
| end
~~ Run: `luac -l <archivo>
~~ Output:

function <pedir_num.lua:1,6> (19 instructions at 0x55e931e83960)
0 params, 5 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[2]	GETTABUP 	0 0 -1	; _ENV "print"
	2	[2]	LOADK    	1 -2	; "Escrib\195\173 un n\195\186mero: "
	3	[2]	CALL     	0 2 1
	4	[3]	GETTABUP 	0 0 -4	; _ENV "io"
	5	[3]	GETTABLE 	0 0 -5	; "read"
	6	[3]	CALL     	0 1 2
	7	[3]	SETTABUP 	0 -3 0	; _ENV "num_texto"
	8	[4]	GETTABUP 	0 0 -7	; _ENV "tonumber"
	9	[4]	GETTABUP 	1 0 -3	; _ENV "num_texto"
	10	[4]	CALL     	0 2 2
	11	[4]	SETTABUP 	0 -6 0	; _ENV "num"
	12	[5]	GETTABUP 	0 0 -1	; _ENV "print"
	13	[5]	GETTABUP 	1 0 -6	; _ENV "num"
	14	[5]	LOADK    	2 -8	; "al cuadrado es"
	15	[5]	GETTABUP 	3 0 -6	; _ENV "num"
	16	[5]	GETTABUP 	4 0 -6	; _ENV "num"
	17	[5]	MUL      	3 3 4
	18	[5]	CALL     	0 4 1
	19	[6]	RETURN   	0 1
